#!/usr/bin/env ruby

if ARGV.delete("-h") or ARGV.delete("--help")
  puts <<-END
    Usage:
      #$0 services_file

      Connect to the tuplespace specified by the services_file and
      use the notification api to print out all events.
      
      For example, you can start a tup with
      
          tup sv
      
      and then in another terminal
      
          tspy sv

    Options:
    
      --debug     set the log level
      --info
      --warn      <-- default
      --error
      --fatal
  END
  exit
end

require 'tupelo/app'
require 'tupelo/archiver/tuplespace'

Tupelo.application do
  # Use hash-and-count-based storage, for efficiency (this client never
  # does take or read).
  local tuplespace: [Tupelo::Archiver::Tuplespace, zero_tolerance: 1000] do
    trap :INT do
      exit!
    end

    note = notifier
    log "%10s %10s %10s %s" % %w{ tick client status operation }
    loop do
      status, tick, cid, op = note.wait
      log "%10d %10d %10s %p" % [tick, cid, status, op]
    end
  end
end
